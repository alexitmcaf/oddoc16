name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # Trigger workflow on pushes to the main branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Step 2: Debug repository files
      - name: List repository files
        run: ls -la

      # Step 3: Verify addons directory exists
      - name: Verify addons directory
        run: |
          if [ -d "./addons" ]; then
            echo "Addons directory found"
            ls -la ./addons
          else
            echo "Addons directory not found"
            exit 1
          fi
      
      # Step 4: Verify odoo.conf file exists
      - name: Verify odoo.conf file
        run: ls -la ./etc/odoo.conf || echo "odoo.conf file not found"

      # Step 5: Prepare volume directories on the host machine
      - name: Create directories for Docker volumes
        run: |
          sudo mkdir -p /home/oddoc/odoo/pgdata
          sudo mkdir -p /home/oddoc/odoo/odoo_data
          sudo chown -R $USER:$USER /home/oddoc/odoo
          echo "Volume directories created successfully"
          ls -la /home/oddoc/odoo
        shell: /bin/bash

      # Step 6: Copy addons and config to docker folder (if necessary)
      - name: Copy addons and odoo.conf to docker folder
        run: |
          mkdir -p docker/addons
          mkdir -p docker/etc
          cp -r ./addons/* ./docker/addons/
          cp ./etc/odoo.conf ./docker/etc/odoo.conf

      # Step 7: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 8: Set up Docker Buildx (optional for multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 9: Build and push the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/odoo16-custom:latest

      # Step 10: Verify addons in the Docker image
      - name: Debug addons in Docker image
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/odoo16-custom:latest
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/odoo16-custom:latest ls -la /mnt/extra-addons

      # Step 11: Verify the image (optional)
      - name: Run Docker image for verification
        run: |
          docker run --rm -d -p 8069:8069 \
            -v /home/oddoc/odoo/pgdata:/var/lib/postgresql/data/pgdata \
            -v /home/oddoc/odoo/odoo_data:/var/lib/odoo \
            ${{ secrets.DOCKER_USERNAME }}/odoo16-custom:latest
