name: Odoo CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test Odoo Application
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: odoo
          POSTGRES_PASSWORD: odoo
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U odoo"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Wait for PostgreSQL
      run: |
        for i in {1..30}; do
          if pg_isready -h 127.0.0.1 -p 5432; then
            echo "PostgreSQL is ready"
            exit 0
          fi
          echo "Waiting for PostgreSQL..."
          sleep 10
        done
        echo "PostgreSQL did not become ready in time" && exit 1

    - name: Debug PostgreSQL Logs
      run: docker logs $(docker ps -q --filter "name=postgres")

    - name: Verify addons directory
      run: |
        if [ ! -d "./addons" ]; then
          echo "addons directory not found" && exit 1
        fi

    - name: Verify odoo.conf file
      run: |
        if [ ! -f "./etc/odoo.conf" ]; then
          echo "odoo.conf file not found" && exit 1
        fi

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Disable Auto-Vacuum Cron Job
      run: |
        docker-compose exec postgres psql -U odoo -c \
          "UPDATE ir_cron SET active = FALSE WHERE name = 'Base: Auto-vacuum internal data';"

    - name: Disable All Cron Jobs
      run: |
        docker-compose exec postgres psql -U odoo -c \
          "UPDATE ir_cron SET active = FALSE WHERE active IS TRUE;"

    - name: Initialize Odoo Database
      run: |
        docker-compose run --rm odoo odoo -i base --no-cron --load=web --addons-path=/mnt/extra-addons,/usr/lib/python3/dist-packages/odoo/addons

    - name: Run Odoo Tests
      run: |
        docker-compose run --rm odoo odoo --test-enable --init=all

    - name: Teardown
      if: always()
      run: docker-compose down

  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Odoo Image
      run: |
        IMAGE_TAG=${{ secrets.DOCKER_USERNAME }}/odoo:16
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG
